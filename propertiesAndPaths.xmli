
	<!-- This XML file is for inclusion in build.xml, and not for usage in itself -->

	<!-- Import build specific info, like version number -->
    <property file="src/internal.properties" />
	
    <property name="ejbca.home" location="." />
    <property environment="env" />

	<!--
		Merge custom modifications from customejbca.home to
		ejbca.home before reading the other configuration files.
	-->
    <property file="conf/custom.properties" />
    <property name="customejbca.home" location="${ejbca.home}/../ejbca-custom" />
    <available file="${customejbca.home}" type="dir" property="customejbca.present" />
    <condition property="customejbca.message" else="No custom changes to merge."
    	value="Merging available external modifications from ${customejbca.home}.">
    	<isset property="customejbca.present" />
    </condition>
	<echo message="${customejbca.message}" />
    <condition property="customejbca.extensions" value="*" else="none-at-all">
    	<isset property="customejbca.present" />
    </condition>
    <condition property="customejbca.dir" value="${customejbca.home}" else="conf">
    	<isset property="customejbca.present" />
    </condition>
	<copy todir="${ejbca.home}" overwrite="true" failonerror="false">
		<fileset dir="${customejbca.dir}" >
			<include name="**/*.${customejbca.extensions}"/>
   		</fileset>
	</copy>

    <!-- 
       Give user a chance to override without editing this file
       (and without typing -D each time it compiles it).
       First it checks your home directory for ejbca.properties
       next it checks the properties file here. 
    -->
    <property file="${user.home}/${app.name}.properties" />
	<!-- Keep reading the old file to be simply backwards compatible, the new one (conf/x overrides -->
    <property file="${app.name}.properties" />
    <property file="conf/${app.name}.properties" />
    <property file="conf/protection.properties" />
    <property file="conf/database.properties" />
    <property file="conf/mail.properties" />
    <property file="conf/ocsp.properties" />
    <property file="conf/web.properties" />
    <property file="conf/cmp.properties" />
    <property file="conf/jaxws.properties" />
    <property file="conf/xkms.properties" />
    <property file="conf/externalra.properties" />

    <!--
        Start setting default values and classpaths etc here
    -->

    <!-- A little special something to handle backward compatibility with 
         people using JBOSS_HOME. They can switch to APPSRV_HOME now, and both will work. 
    -->        
    <condition property="jboss.home" value="${env.JBOSS_HOME}" >
        <equals arg1="${appserver.home}" arg2="${appserver.home}"/>
    </condition>
    <condition property="appserver.home" value="${env.APPSRV_HOME}" else="${jboss.home}">
        <contains string="${jboss.home}" substring="JBOSS_HOME"/>
    </condition>

	<fail message="appserver.home (${appserver.home}) can not end with a slash.">
    	<condition>
    		<or>
    	    	<contains string="${appserver.home}/thereisverylittlechancethatthisstringalreadyexistsinthepath" substring="//thereisverylittlechancethatthisstringalreadyexistsinthepath"/>
    	    	<contains string="${appserver.home}\\thereisverylittlechancethatthisstringalreadyexistsinthepath" substring="\\\\thereisverylittlechancethatthisstringalreadyexistsinthepath"/>
    	    </or>
    	</condition>
    </fail>

	<!-- Auto-detect supported application server type (also present in modules/build-properties.xml) -->
	<available file="${appserver.home}/client/jboss-javaee.jar" property="appserver.type" value="jboss"/>
	<available file="${appserver.home}/lib/javaee.jar" property="appserver.type" value="glassfish"/>
	<!-- Not yet tested:
		<available file="${appserver.home}/bin/server.jar" property="appserver.type" value="geronimo"/>
		<available file="${appserver.home}/server/lib/wlclient.jar" property="appserver.type" value="weblogic"/>
	-->
	<fail message="'appserver.type' could not be detected or is not configured. Glassfish 2.1.1 and JBoss 5.1.0.GA are currently supported. (Normally you should not have to configure this.)" unless="appserver.type"/>
	
    <!-- Default to 16 -->    
    <property name="java.ver" value="16" />
	
	<!-- Default to true -->	
	<property name="ejbcaws.enabled" value="true" />
		
    <!-- set global properties for this build -->
    <property name="tmp" value="./tmp" />
    <property name="bin" value="./${tmp}/bin" />
    <property name="build" value="${bin}/classes" />
    <property name="ocsp-build" location="${bin}/ocsp-classes"/>
    <property name="clientToolBox.build" location="${bin}/clientToolBox-classes" />
    <property name="lib" value="lib" />
    <property name="mainsrc" value="src"/>
    <property name="mainbin" value="bin"/>
    <property name="appserver.src" value="${mainsrc}/appserver" />
    
    <property name="jaxws.dir" value="${tmp}/jaxws" />
    <property name="jaxws.libdir" value="${jaxws.dir}/lib" />

    <property name="src" value="${tmp}/preprocessed" />
    <property name="src.java" value="${src}/java" />
    <property name="src.gen" value="${bin}/gensrc" />
    <property name="src.dd" value="${bin}/dd" />
    <property name="ocsp-src.gen" value="${bin}/ocsp-gensrc" />
    <property name="ocsp-src.dd" value="${bin}/ocsp-dd" />
    
    <property name="test.dir" value="${bin}/junit" />
    <property name="test.src.dir" location="${src}/test" />
    <property name="dist.dir" location="dist" />
    <property name="ocsp-dist.dir" location="ocsp-dist" />
    <property name="clientToolBox-dist.dir" location="dist/clientToolBox" />
	
    <property name="hwtoken_classes" value="hwtoken"/>
    <property name="hwtoken.class.dir" location="${hwtoken_classes}" />
    <property name="apidoc" value="./doc/api" />

    <property name="doc.src" value="tmp/htdocs" />
    <property name="docwar" value="${dist.dir}/doc.war" />
	
    <property name="deploy.src" value="${src}/deploy" />
    <property name="ejbdd.src" value="${deploy.src}/ejb" />
    <property name="webdd.src" value="${deploy.src}/web" />
    <property name="eardd.src" value="${deploy.src}/ear" />
    <property name="ocsp-eardd.src" value="${deploy.src}/ocsp-ear" />
    <property name="caear" value="${dist.dir}/${app.name}.ear" />
    <property name="ocspear" value="${ocsp-dist.dir}/${app.name}.ear" />

    <import file="propertyDefaults.xml"/>
