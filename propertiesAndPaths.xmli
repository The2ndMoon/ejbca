
	<!-- This XML file is for inclusion in build.xml, and not for usage in itself -->

	<!-- Import build specific info, like version number -->
    <property file="src/internal.properties" />
	
    <property name="ejbca.home" location="." />
    <property environment="env" />

	<!--
		Merge custom modifications from customejbca.home to
		ejbca.home before reading the other configuration files.
	-->
    <property file="conf/custom.properties" />
    <property name="customejbca.home" location="${ejbca.home}/../ejbca-custom" />
    <available file="${customejbca.home}" type="dir" property="customejbca.present" />
    <condition property="customejbca.message" else="No custom changes to merge."
    	value="Merging available external modifications from ${customejbca.home}.">
    	<isset property="customejbca.present" />
    </condition>
	<echo message="${customejbca.message}" />
    <condition property="customejbca.extensions" value="*" else="none-at-all">
    	<isset property="customejbca.present" />
    </condition>
    <condition property="customejbca.dir" value="${customejbca.home}" else="conf">
    	<isset property="customejbca.present" />
    </condition>
	<copy todir="${ejbca.home}" overwrite="true" failonerror="false">
		<fileset dir="${customejbca.dir}" >
			<include name="**/*.${customejbca.extensions}"/>
   		</fileset>
	</copy>

    <!-- 
       Give user a chance to override without editing this file
       (and without typing -D each time it compiles it).
       First it checks your home directory for ejbca.properties
       next it checks the properties file here. 
    -->
    <property file="${user.home}/${app.name}.properties" />
	<!-- Keep reading the old file to be simply backwards compatible, the new one (conf/x overrides -->
    <property file="${app.name}.properties" />
    <property file="conf/${app.name}.properties" />
    <property file="conf/protection.properties" />
    <property file="conf/database.properties" />
    <property file="conf/mail.properties" />
    <property file="conf/ocsp.properties" />
    <property file="conf/web.properties" />
    <property file="conf/cmp.properties" />
    <property file="conf/jaxws.properties" />
    <property file="conf/xkms.properties" />
    <property file="conf/externalra.properties" />

    <!--
        Start setting default values and classpaths etc here
    -->

    <!-- A little special something to handle backward compatibility with 
         people using JBOSS_HOME. They can switch to APPSRV_HOME now, and both will work. 
    -->        
    <condition property="jboss.home" value="${env.JBOSS_HOME}" >
        <equals arg1="${appserver.home}" arg2="${appserver.home}"/>
    </condition>
    <condition property="appserver.home" value="${env.APPSRV_HOME}" else="${jboss.home}">
        <contains string="${jboss.home}" substring="JBOSS_HOME"/>
    </condition>

	<fail message="appserver.home (${appserver.home}) can not end with a slash.">
    	<condition>
    		<or>
    	    	<contains string="${appserver.home}/thereisverylittlechancethatthisstringalreadyexistsinthepath" substring="//thereisverylittlechancethatthisstringalreadyexistsinthepath"/>
    	    	<contains string="${appserver.home}\\thereisverylittlechancethatthisstringalreadyexistsinthepath" substring="\\\\thereisverylittlechancethatthisstringalreadyexistsinthepath"/>
    	    </or>
    	</condition>
    </fail>
	
    <!-- Default to 16 -->    
    <property name="java.ver" value="16" />
		
    <!-- set global properties for this build -->
    <property name="tmp" value="./tmp" />
    <property name="bin" value="./${tmp}/bin" />
    <property name="build" value="${bin}/classes" />
    <property name="ocsp-build" location="${bin}/ocsp-classes"/>
    <property name="clientToolBox.build" location="${bin}/clientToolBox-classes" />
    <property name="lib" value="lib" />
    <property name="mainsrc" value="src"/>
    <property name="mainbin" value="bin"/>
    <property name="appserver.src" value="${mainsrc}/appserver" />
    
    <property name="jsf.dir" value="${tmp}/jsf" />
    <property name="jsf.libdir" value="${jsf.dir}/lib" />

    <property name="jaxws.dir" value="${tmp}/jaxws" />
    <property name="jaxws.libdir" value="${jaxws.dir}/lib" />

    <property name="src" value="${tmp}/preprocessed" />
    <property name="src.java" value="${src}/java" />
    <property name="src.gen" value="${bin}/gensrc" />
    <property name="src.dd" value="${bin}/dd" />
    <property name="ocsp-src.gen" value="${bin}/ocsp-gensrc" />
    <property name="ocsp-src.dd" value="${bin}/ocsp-dd" />
    
    <property name="test.dir" value="${bin}/junit" />
    <property name="test.src.dir" location="${src}/test" />
    <property name="dist.dir" location="dist" />
    <property name="ocsp-dist.dir" location="ocsp-dist" />
    <property name="clientToolBox-dist.dir" location="dist/clientToolBox" />
	
    <property name="hwtoken_classes" value="hwtoken"/>
    <property name="hwtoken.class.dir" location="${hwtoken_classes}" />
    <property name="apidoc" value="./doc/api" />

    <property name="scep.src" value="${src}/publicweb/scep" />
    <property name="scepwar" value="${dist.dir}/scep.war" />

    <property name="webdist.src" value="${src}/publicweb/webdist" />
    <property name="webdistwar" value="${dist.dir}/webdist.war" />

    <property name="sampleauth.src" value="${src}/ca/sampleauth" />
    <property name="sampleauthwar" value="${dist.dir}/sampleauth.war" />

    <property name="status.src" value="${src}/publicweb/status" />
    <property name="statuswar" value="${dist.dir}/status.war" />
	
    <property name="doc.src" value="tmp/htdocs" />
    <property name="docwar" value="${dist.dir}/doc.war" />
	
    <property name="cmp.src" value="${src}/publicweb/cmp" />
    <property name="cmpwar" value="${dist.dir}/cmp.war" />
	
    <property name="healthcheck.src" value="${src}/publicweb/healthcheck" />
    <property name="healthcheckwar" value="${dist.dir}/healthcheck.war" />
	
	<property name="ejbcaws.enabled" value="true" />
    <property name="ejbcaws.src" value="${src}/wsee" />
	<property name="ejbcaws.build" value="${tmp}/ejbcaws.war" />  
    <property name="ejbcawswar" value="${dist.dir}/ejbcaws.war" />

    <property name="ocsphealthcheck.src" value="${src}/publicweb/ocsphealthcheck" />
    <property name="ocsphealthcheckwar" value="${ocsp-dist.dir}/ocsphealthcheck.war" />
	
    <property name="ocspwar" value="${ocsp-dist.dir}/status.war" />

    <property name="adminweb.src" value="${src}/adminweb" />
    <property name="adminweb.build" value="${tmp}/adminweb.war" />    
    <property name="adminwebwar" value="${dist.dir}/adminweb.war" />

    <property name="publicweb.src" value="${src}/publicweb/publicweb" />
    <property name="publicweb.build" value="${tmp}/publicweb.war" />    
    <property name="publicwebwar" value="${dist.dir}/publicweb.war" />

	<property name="renew.src" value="${src}/publicweb/renew" />
    <property name="renew.build" value="${tmp}/renew.war" />    
    <property name="renewwar" value="${dist.dir}/renew.war" />

    <property name="deploy.src" value="${src}/deploy" />
    <property name="ejbdd.src" value="${deploy.src}/ejb" />
    <property name="webdd.src" value="${deploy.src}/web" />
    <property name="eardd.src" value="${deploy.src}/ear" />
    <property name="ocsp-eardd.src" value="${deploy.src}/ocsp-ear" />
    <property name="caear" value="${dist.dir}/${app.name}.ear" />
    <property name="ocspear" value="${ocsp-dist.dir}/${app.name}.ear" />

	<property name="cmptcpservice.name" value="cmptcpservice.jar" />
    <property name="cmptcpservice.build" value="${tmp}/${cmptcpservice.name}" />	
    <property name="cmptcpservicejar" value="${dist.dir}/${cmptcpservice.name}" />

    <property name="logsigning.name" value="ejbcalogsigning.jar" />
    <property name="logsigning.build" value="${tmp}/${logsigning.name}" />  
    <property name="logsigningjar" value="${dist.dir}/${logsigning.name}" />
    
    <property name="jbosslog4jsafer.name" value="jbosslog4jsafer.jar" />
    <property name="jbosslog4jsafer.build" value="${tmp}/${jbosslog4jsafer.name}" />  
    <property name="jbosslog4jsaferjar" value="${dist.dir}/${jbosslog4jsafer.name}" />

    <property name="jar.extclasspath" value="lib/bcmail-jdk${java.ver}-145.jar lib/bcprov-jdk${java.ver}-145.jar lib/cert-cvc.jar lib/log4j.jar lib/ldap.jar lib/commons-lang-2.4.jar lib/commons-collections-3.2.jar lib/commons-fileupload-1.2.1.jar lib/commons-configuration-1.5.jar lib/batik/batik-anim.jar lib/batik/batik-awt-util.jar lib/batik/batik-bridge.jar lib/batik/batik-codec.jar lib/batik/batik-css.jar lib/batik/batik-dom.jar lib/batik/batik-ext.jar lib/batik/batik-gvt.jar lib/batik/batik-parser.jar lib/batik/batik-script.jar lib/batik/batik-svg-dom.jar lib/batik/batik-svggen.jar lib/batik/batik-transcoder.jar lib/batik/batik-util.jar lib/batik/batik-xml.jar lib/batik/xerces.jar lib/xmlsign/xmlsec-1.3.0.jar lib/reports/jasperreports-1.3.3.jar lib/reports/jfreechart-1.0.0.jar lib/reports/jcommon-1.0.8.jar"/>	

    <path id="ext.classpath">
        <fileset dir="lib/ext" includes="*.jar" />
    </path>

    <path id="nonj2ee-compile.classpath">
        <path refid="ext.classpath" />
        <fileset dir="lib" includes="*.jar" excludes="bc*.jar"/>
        <fileset dir="lib/quickserver" includes="*.jar"/>
        <fileset dir="lib/myfaces" includes="*.jar"/>
        <fileset dir="lib/batik" includes="*.jar"/>
        <fileset dir="lib" includes="bcmail-jdk${java.ver}-145.jar"/>
    	<fileset dir="lib" includes="bcprov-jdk${java.ver}-145.jar"/>
    	<fileset dir="lib" includes="cert-cvc.jar"/>
        <fileset dir="lib/jaxws">
    	  <include name="**/*.jar"/>
    	</fileset> 
        <fileset dir="lib/reports">
    	  <include name="**/*.jar"/>
    	</fileset> 
        <fileset dir="lib/batik">
    	  <include name="**/*.jar"/>
    	</fileset> 
    	<fileset dir="lib/xmlsign" includes="xmlsec-1.3.0.jar"/>
        <pathelement location="tmp/xkms/gen-classes"/>
        <pathelement location="dist/ejbca-util.jar"/>
    </path>

    <path id="compile.classpath">
        <path refid="nonj2ee-compile.classpath" />
        <path refid="j2ee.classpath" />
    </path>

    <path id="jpa.classpath">
        <fileset dir="${lib}/hibernate">
            <include name="antlr-2.7.6.jar"/>
            <include name="hibernate3.jar"/>
            <include name="hibernate-core.jar"/>
            <include name="hibernate-annotations.jar"/>
            <include name="hibernate-commons-annotations.jar"/>
            <include name="hibernate-entitymanager.jar"/>
            <include name="hibernate-validator.jar"/>
            <include name="javassist-3.4.GA.jar"/>
            <include name="ejb3-persistence.jar"/>
            <include name="slf4j-api-1.5.2.jar"/>
            <include name="slf4j-log4j12.jar"/>
            <include name="jta-1.1.jar"/>
        </fileset>
    </path>

    <path id="j2ee.classpath">
        <fileset dir="${appserver.home}">
        	<!-- jboss -->
            <include name="client/jbossall-client.jar" />
            <include name="client/jboss-j2ee.jar" />
        	<!-- glassfish -->
            <include name="lib/javaee.jar"/>
            <include name="lib/appserv-rt.jar"/>
        	<!-- weblogic -->
            <include name="server/lib/weblogic.jar"/>	<!-- For 9.2 -->
            <include name="server/lib/wlclient.jar"/>	<!-- For 10.3 -->
        	<!-- websphere -->
            <include name="runtimes/com.ibm.*.jar"/>
        </fileset>
    </path>

    <path id="jbossservices.classpath">
        <pathelement location="${appserver.home}/lib/jboss-system.jar" />
        <pathelement location="${appserver.home}/lib/jboss-common.jar" />
        <pathelement location="${appserver.home}/lib/jboss-jmx.jar" />
        <!-- The two below needed for JBoss 5 -->
        <pathelement location="${appserver.home}/lib/jboss-system-jmx.jar" />
        <pathelement location="${appserver.home}/lib/jboss-kernel.jar" />
    </path>
        
    <path id="test.base.classpath">
        <path refid="nonj2ee-compile.classpath" />
        <path location="${build}" />
    </path>

    <import file="propertyDefaults.xml"/>
