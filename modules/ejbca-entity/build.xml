<?xml version="1.0" encoding="UTF-8"?>
<project name="ejbca-entity" default="build">
    <description>
            Contains all JPA entity classes.
    </description>

	<dirname property="this.dir" file="${ant.file.ejbca-entity}"/>
	<import file="${this.dir}/../build.xml"/>
	
	<property name="build.dir" location="${this.dir}/build"/>
	<property name="build-test.dir" location="${this.dir}/build-test"/>
	<property name="reports.base.dir" location="${this.dir}/build-test/reports/"/>
	<property name="src.dir" location="${this.dir}/src"/>
	<property name="src-test.dir" location="${this.dir}/src-test"/>
	<property name="resources.dir" location="${this.dir}/resources"/>

	<path id="compile.classpath">
		<path refid="lib.utils.classpath"/>
		<path refid="lib.jpa.classpath"/>
		<path refid="lib.ejbca-util.classpath"/>
		<path refid="lib.bouncycastle.classpath"/>
	</path>

	<path id="compile-test.classpath">
		<path refid="compile.classpath"/>
		<path location="${build.dir}"/>
		<path refid="lib.junit.classpath"/>
	</path>
	
	<path id="jdbc-jars.classpath">
		<fileset dir="${jdbc.driver.dir}" includes="*.jar"/>
	</path>

	<path id="test.classpath">
		<path refid="compile.classpath"/>
		<path refid="lib.batik.classpath"/>	<!-- we only need xerces -->
		<path refid="jdbc-jars.classpath"/>
		<path location="${build-test.dir}"/>
		<path location="${mod.ejbca-entity.lib}"/>
		<path refid="lib.junit.classpath"/>
	</path>

    <target name="clean" description="Clean up this module">
		<delete dir="${build.dir}" />
		<delete dir="${build-test.dir}" />
		<delete file="${mod.ejbca-entity.lib}" />
		<delete file="${mod.ocsp-entity.lib}" />
    </target>
	
    <target name="build" description="Build this module" depends="compile, handlepersistence, handleorm">
    	<jar destfile="${mod.ejbca-entity.lib}" basedir="${build.dir}" includes="**/*.class **/*.xml"/>
    </target>

    <target name="build-ocsp" description="Build this module" depends="compile, handlepersistence, handleorm-ocsp">
    	<jar destfile="${mod.ocsp-entity.lib}" basedir="${build.dir}" includes="**/CertificateData.class **/*.xml"/>
    </target>

    <target name="compile" depends="ejbca-util">
    	<mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" includeantruntime="no"
        	encoding="iso8859-1" target="${java.target.version}" classpathref="compile.classpath"/>
    </target>

    <target name="handlepersistence">
    	<echo message="Database type:      ${database.name}"/>
    	<echo message="DataSource mapping: ${datasource.jndi-name-prefix}${datasource.jndi-name}"/>
    	<echo message="Connection URL:     ${database.url}"/>
    	<echo message="Driver class:       ${database.driver}"/>
    	<echo message="Username:           ${database.username}"/>
    	<echo message="Password:           [hidden]"/>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.DB2Dialect"><equals arg1="${database.name}" arg2="db2"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.DerbyDialect"><equals arg1="${database.name}" arg2="derby"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"><equals arg1="${database.name}" arg2="hsqldb"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.InformixDialect"><equals arg1="${database.name}" arg2="informix"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.IngresDialect"><equals arg1="${database.name}" arg2="ingres"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.SQLServerDialect"><equals arg1="${database.name}" arg2="mssql"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"><equals arg1="${database.name}" arg2="mysql"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect"><equals arg1="${database.name}" arg2="oracle"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"><equals arg1="${database.name}" arg2="postgres"/></condition>
    	<condition property="hibernate.dialect" value="org.hibernate.dialect.SybaseDialect"><equals arg1="${database.name}" arg2="sybase"/></condition>
    	<fail unless="hibernate.dialect" message="Unsupported database type '${database.name}'."/>
    	<mkdir dir="${build.dir}/META-INF"/>
    	<copy file="${resources.dir}/persistence-ds-template.xml" tofile="${build.dir}/META-INF/persistence.xml" failonerror="true" overwrite="true">
    		<filterchain>
				<expandproperties/>
    		</filterchain>
    	</copy>
    	<mkdir dir="${build-test.dir}/META-INF" />
    	<copy file="${resources.dir}/persistence-test-template.xml" tofile="${build-test.dir}/META-INF/persistence.xml" failonerror="true" overwrite="true">
    		<filterchain>
				<expandproperties/>
    		</filterchain>
    	</copy>
    </target>

    <target name="handleorm">
		<copy file="${resources.dir}/orm-ejbca-${database.name}.xml" tofile="${build.dir}/META-INF/orm.xml" failonerror="true" overwrite="true"/>
	</target>

    <target name="handleorm-ocsp">
		<copy file="${resources.dir}/orm-ocsp-${database.name}.xml" tofile="${build.dir}/META-INF/orm.xml" failonerror="true" overwrite="true"/>
	</target>

    <target name="compile-ocsp" depends="ejbca-util">
    	<mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" includeantruntime="no"
        	encoding="iso8859-1" target="${java.target.version}" classpathref="compile.classpath"/>
    </target>

    <target name="test-dbschema" description="Perform database schema validation." depends="compile-test, handlepersistence">
    	<fail unless="jdbc.driver.dir" message="Use -Djdbc.driver.dir=/path-to-jdbc-jars/ to specify the directory with the JDBC driver JARs."/>
		<available property="database.driver.available" classname="${database.driver}" classpathref="jdbc-jars.classpath"/>
    	<fail unless="database.driver.available" message="Driver class (${database.driver}) from database.properties can not be found in ${jdbc.driver.dir}."/>
        <copy file="${resources.dir}/log4j.xml" tofile="${build-test.dir}/log4j.xml" />
    	<mkdir dir="${build-test.dir}/META-INF"/>
		<copy file="${resources.dir}/orm-ejbca-${database.name}.xml" tofile="${build-test.dir}/META-INF/orm.xml" failonerror="true" overwrite="true"/>
    	<property name="reports.dir" location="${reports.base.dir}/dbschema"/>
		<delete dir="${reports.dir}" />
		<mkdir dir="${reports.dir}/html"/>
		<junit printsummary="yes" haltonfailure="no">
			<classpath>
        		<path refid="test.classpath"/>
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.dir}">
				<fileset dir="${build-test.dir}">
					<include name="org/ejbca/core/ejb/DatabaseSchemaTest.class" />
				</fileset>
			</batchtest>
		</junit>
		<antcall target="createreport"/>
    </target>

    <target name="compile-test" depends="ejbca-util, build">
    	<mkdir dir="${build-test.dir}" />
        <javac srcdir="${src-test.dir}" destdir="${build-test.dir}" debug="on" includeantruntime="no"
        	encoding="iso8859-1" target="${java.target.version}" classpathref="compile-test.classpath"/>
    </target>

</project>
